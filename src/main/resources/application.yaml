spring:
  datasource:
    url: jdbc:h2:file:./data/${NODE_ID:node-local};MODE=PostgreSQL
    driver-class-name: org.h2.Driver
    username: sa
    password:
  jpa:
    hibernate.ddl-auto: update
    show-sql: false
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod}
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration

server:
  port: 8080

cors:
  origins: "*"

alerts:
  email:
    to: ${ALERT_EMAIL_TO:}

app:
  incidents:
    ttl-check-ms: 1000
    default-ttl-sec: 40
  node:
    id: ${NODE_ID:node-local}
    region: ${REGION_CODE:RU-MOW}
    peers: ${PEERS:}
  sensors:
    simulate:
      enabled: true
      period-ms: 30000
  camera:
    monitor:
      enabled: true
      period-ms: 60000
      analyzer: openrouter
      snapshot-base: http://gateway/snapshots/
      snapshot-max-age-sec: 600
  ai:
    openrouter:
      key: ${OPENROUTER_API_KEY:}
      model: openai/gpt-4o-mini

ai:
  base-url: ${AI_BASE_URL:https://openrouter.ai/api/v1}
  api-key: ${AI_API_KEY:${OPENROUTER_API_KEY:}}
  model: ${AI_MODEL:openai/gpt-4o-mini}
  timeout-ms: ${AI_TIMEOUT_MS:15000}
  temperature: ${AI_TEMPERATURE:0.2}